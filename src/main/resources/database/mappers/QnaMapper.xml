<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.iu.s1.board.qna.QnaDAO">
  
  	<!-- 공통 조건문 -->
  	<sql id="qnaCondition">
  		<where>
 	 		<if test="kind == 'title'">
 	 			TITLE LIKE '%'||#{search}||'%'
 	 		</if>
 	 		<if test="kind == 'contents'">
 	 			CONTENTS LIKE '%'||#{search}||'%'
 	 		</if>
 	 		<if test="kind == 'writer'">
 	 			WRITER LIKE '%'||#{search}||'%'
 	 		</if>	
  		</where>
  	</sql>
  	
  
  	
  	<!-- 전체 갯수 -->
  	<select id="getTotalCount" resultType="Long" parameterType="Pager">
  		SELECT COUNT(NUM) FROM QNA
  		<include refid="qnaCondition"></include>
  	</select>
  	
  	<!-- list 출력 -->
  	<select id="getBoardList" resultType="QnaDTO" parameterType="Pager">
  		SELECT * FROM (
			SELECT ROWNUM R, Q.* FROM (
				SELECT NUM, TITLE, WRITER, REGDATE, HIT, DEPTH FROM QNA
				<include refid="qnaCondition"></include>
				ORDER BY REF DESC, STEP ASC
			) Q
		) WHERE R BETWEEN #{startRow} AND #{lastRow}
  	</select>
  	
  	<!-- detail 출력 -->
  	<select id="getBoardDetail" parameterType="BoardDTO" resultType="QnaDTO" resultMap="getBoardDetailResult">
  		SELECT * FROM QNA Q
			LEFT JOIN
			QNAFILES QF
			USING(NUM)
		WHERE NUM = #{num}
  	</select>
  	
  	<resultMap type="QnaDTO" id="getBoardDetailResult">
  		<id column="num" property="num"/>
  		<result column="title" property="title"/>
  		<result column="writer" property="writer"/>
  		<result column="contents" property="contents"/>
  		<result column="regDate" property="regDate"/>
  		<result column="hit" property="hit"/>
  		<result column="depth" property="depth"/>
  		<!-- 1:n관계에서는 collect을 쓰고 이때 javaType으로 List를 받아오고 
  		ofType으로 List안에 모여있는 타입을 적는다 -->
  		<collection property="boardFileDTOs" javaType="List" ofType="BoardFileDTO">
  			<id column="fileNum" property="fileNum"/>
  			<result column="fileName" property="fileName"/>
  			<result column="oriName" property="oriName"/>
  		</collection>
  	</resultMap>
  	
  	<insert id="setBoardAdd" parameterType="BbsDTO">
	  	<selectKey keyProperty="num" resultType="Long" order="BEFORE">
	  		SELECT QNA_SEQ.NEXTVAL FROM DUAL
	  	</selectKey>
  		INSERT INTO QNA (NUM, TITLE, CONTENTS, WRITER, REGDATE, HIT, REF, STEP, DEPTH)
  		VALUES(#{num}, #{title}, #{contents}, #{writer}, SYSDATE, 0, #{num}, 0, 0)
  	</insert>
  	
  	<insert id="setBoardFileAdd" parameterType="BoardFileDTO">
  		INSERT INTO QNAFILES (FILENUM, NUM, FILENAME, ORINAME)
  		VALUES (QNA_SEQ.NEXTVAL, #{num}, #{fileName}, #{oriName})
  	</insert>
  
  	<insert id="setReplyAdd" parameterType="QnaDTO">
  		INSERT INTO QNA (NUM, TITLE, CONTENTS, WRITER, REGDATE, HIT, REF, STEP, DEPTH)
  		VALUES(QNA_SEQ.NEXTVAL, #{title}, #{contents}, #{writer}, SYSDATE, 0, #{ref}, #{step}, #{depth})
  	</insert>
  
  	<update id="setStepUpdate" parameterType="QnaDTO">
  		UPDATE QNA SET STEP = STEP + 1
  		WHERE REF = #{ref} AND STEP > #{step}
  	</update>
  	
  	<delete id="setBoardDelete" parameterType="BbsDTO">
  		DELETE QNA WHERE NUM = #{num}
  	</delete>
  	
  	<select id="getBoardFileList" parameterType="BbsDTO" resultType="BoardFileDTO">
  		SELECT * FROM QNAFILES WHERE NUM=#{num}
  	</select>
  
  </mapper>
  
  